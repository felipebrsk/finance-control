name: CI

on:
  pull_request:
    types: [opened, edited, synchronize, reopened, ready_for_review]
    branches:
      - "*"
  push:
    branches:
      - main

env:
  DB_DATABASE: database/database.sqlite
  DB_CONNECTION: sqlite

jobs:
  security-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download the security checker binary
        run: |
          curl -L -s https://github.com/fabpot/local-php-security-checker/releases/download/v2.0.6/local-php-security-checker_2.0.6_linux_amd64 -o local-php-security-checker
          chmod +x local-php-security-checker

      - name: Run the binary
        run: ./local-php-security-checker

  tests:
    name: Run tests and verfication
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.0

      - name: Copy .env.testing
        run: php -r "file_exists('.env') || copy('.env.testing', '.env');"

      - name: Cache composer.lock
        uses: actions/cache@v3
        id: composer-cache
        with:
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
          path: vendor

      - name: Install Laravel dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Create sqlite dummy database (PHPUnit db)
        run: |
          mkdir -p database
          touch ${{ env.DB_DATABASE }}

      - name: Run pint check
        run: composer pint

      - name: Execute tests before allow merges
        env:
          DB_CONNECTION: ${{ env.DB_CONNECTION }}
          DB_DATABASE: ${{ env.DB_DATABASE }}
        run: composer test

      - name: Upload coverage to Codecov
        if: github.event.pull_request.draft == false
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          verbose: true
          files: ./coverage.xml
